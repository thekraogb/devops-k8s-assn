name: Set up AKS

on:
  workflow_dispatch:
    
jobs:
  build:
    name: Set up cluster 
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Terraform Azure credentials
        run: |
          echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Initialize Terraform backend
        run: terraform init
        working-directory: terraform

      - name: get Terraform outputs 
        run: |
          echo "RG=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$(terraform output -raw cluster_name)" >> $GITHUB_ENV
        working-directory: terraform

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ env.CLUSTER_NAME }} 
          resource-group: ${{ env.RG }}

      - name: Verify cluster access
        run: kubectl get nodes

      - name: Install or Upgrade nginx Ingress
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --create-namespace --namespace ingress-nginx
   

      - name: Install nginx Ingress
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install ingress-nginx ingress-nginx/ingress-nginx --create-namespace --namespace ingress-nginx

      - name: Wait for Ingress LB IP
        run: |
          echo "Waiting for Ingress LB IP to be assigned..."
          for i in {1..30}; do
            IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -n "$IP" ]; then
              echo "Ingress LB IP: $IP"
              echo "INGRESS_LB_IP=$IP" >> $GITHUB_ENV
              break
            fi
            echo "Attempt $i: Waiting for IP..."
            sleep 20
          done
          if [ -z "$IP" ]; then
            echo "Ingress IP not found after 30 attempts, exiting."
            exit 1
          fi

      - name: Create namespace 
        run: |
          kubectl apply -f namespace.yml
        working-directory: k8s

      - name: Deploy k8s backend
        run: |
          kubectl apply -f secret.yml -f service.yml -f deployment.yml -f ingress.yml
        working-directory: k8s/backend

      - name: Deploy k8s frontend
        run: |
          kubectl apply -f deployment.yml -f service.yml -f ingress.yml
        working-directory: k8s/frontend

      - name: Get all 
        run: kubectl get all -n k8s-assn

      - name: Get ingress IP
        run: echo $INGRESS_LB_IP 
